{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","banner.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","detailsHidden","toggleDetails","toggled","setState","className","this","props","event","summary","start","dateTime","location","description","onClick","Component","EventList","filteredEvents","events","slice","count","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","infoText","handleClick","e","document","querySelector","contains","target","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","addEventListener","removeEventListener","type","onChange","onFocus","placeholder","display","NumberOfEvents","numberOfEvents","errorText","updateEventCount","min","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","getEvents","a","NProgress","window","href","startsWith","done","navigator","onLine","data","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","result","setItem","stringify","accessToken","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","fetch","then","res","json","catch","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","Banner","App","eventCount","isLoading","online","updateOnlineStatus","locationEvents","mounted","loading","size","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","getElementById","Error","URL","process","origin","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c1af3ffc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    detailsHidden: true,\r\n  };\r\n\r\n  toggleDetails = () => {\r\n    const toggled = !this.state.detailsHidden;\r\n    this.setState({\r\n      detailsHidden: toggled,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"event\">\r\n        <h2 className=\"event-name\">{this.props.event.summary}</h2>\r\n        <div className=\"divider\"></div>\r\n        <p className=\"event-date-time\">{this.props.event.start.dateTime}</p>\r\n        <p className=\"event-location\">{this.props.event.location}</p>\r\n        {!this.state.detailsHidden && (\r\n          <div className=\"event-details\">\r\n            <div className=\"divider\"></div>\r\n            <p className=\"event-description\">{this.props.event.description}</p>\r\n          </div>\r\n        )}\r\n        <button className=\"toggle-details-button\" onClick={this.toggleDetails}>\r\n          {this.state.detailsHidden ? 'Show Details' : 'Hide Details'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    const filteredEvents = events.slice(0, this.props.count);\r\n\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {filteredEvents.map((event) => (\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = '#1e3c74';\r\n  }\r\n}\r\n\r\nexport class ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = '#cc1f00';\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: false,\r\n    infoText: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClick);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    let componentRoot = document.querySelector('.suggestions');\r\n    if (!componentRoot.contains(e.target)) {\r\n      this.setState({\r\n        showSuggestions: false,\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ showSuggestions: true });\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText:\r\n          'City was not found. Please try another city',\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n      infoText: '',\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <p>City Search</p>\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => {\r\n            this.setState({ showSuggestions: true });\r\n          }}\r\n          placeholder=\"Search cities\"\r\n        />\r\n        <ul\r\n          className=\"suggestions\"\r\n          style={this.state.showSuggestions ? {} : { display: 'none' }}\r\n        >\r\n          {/* Render suggestions. */}\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => {\r\n                this.handleItemClicked(suggestion);\r\n              }}\r\n            >\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          {/* Render all cites list item. */}\r\n          <li key=\"all\" onClick={() => this.handleItemClicked('all')}>\r\n            See all cities\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  //to do: add max number of events\r\n  //shorthand for using the constructor to initialize state\r\n  state = {\r\n    numberOfEvents: 32,\r\n    errorText: '',\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    let count = event.target.value;\r\n    let errorText = '';\r\n\r\n    if (count <= 0 || count > 32) {\r\n      errorText = 'Select a number from 1 to 32';\r\n    }\r\n\r\n    this.setState({\r\n      numberOfEvents: count,\r\n      errorText: errorText,\r\n    });\r\n    this.props.updateEventCount(count);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n        <p>Number of Events</p>\r\n        <input\r\n          type=\"number\"\r\n          className=\"number-input\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n          min=\"0\"\r\n        />\r\n        <ErrorAlert text={this.state.errorText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","const mockData = [\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description:\r\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-19T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181159875584000\"',\r\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:14:30.000Z',\r\n    updated: '2020-05-27T11:45:37.792Z',\r\n    summary: 'React is Fun',\r\n    description:\r\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n    location: 'Berlin, Germany',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-20T15:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n];\r\n\r\nexport { mockData };\r\n","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n//create a new array of only event.location names from an event list\r\nexport const extractLocations = (events) => {\r\n  //create an array with all the names\r\n  var extractLocations = events.map((event) => event.location);\r\n  //create an array with duplicates removed using Set\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const extractFirstEvent = (events) => {\r\n  return events[0];\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const data = localStorage.getItem('lastEvents');\r\n    NProgress.done();\r\n    return data ? JSON.parse(data).events : [];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    //remove the code from the URL\r\n    removeQuery();\r\n\r\n    const url =\r\n      'https://db1dgdavpe.execute-api.us-east-1.amazonaws.com/dev/api/get-events' +\r\n      '/' +\r\n      token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  //do we have a token, and is it valid\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  //get a new token\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n\r\n    //try to get code from url\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n\r\n    //if there's no code, get the URL using the AWS serverless function\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        'https://db1dgdavpe.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url'\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n  return result;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\n//get the google auth token using the code\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://db1dgdavpe.execute-api.us-east-1.amazonaws.com/dev/api/token' +\r\n      '/' +\r\n      encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  //save the token in local storage\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n};\r\n","import React from 'react';\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"banner-text\">\r\n        ~MeetApp~\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { Component } from 'react';\nimport { getEvents, extractLocations } from './api';\nimport Banner from './banner';\nimport { BeatLoader } from 'react-spinners';\nimport { ErrorAlert } from './Alert';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    eventCount: 32,\n    isLoading: true,\n    online: false,\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.setState({ isLoading: true });\n    this.updateOnlineStatus();\n    getEvents().then((events) => {\n      if (this.mounted) {\n        //to facilitate tests which unmount components immediatly and use mock data, only load data if the component is mounted\n        this.setState({ events, locations: extractLocations(events) });\n      }\n      this.setState({ isLoading: false });\n    });\n  }\n\n  updateOnlineStatus() {\n    this.setState({ online: navigator.onLine });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    this.setState({ isLoading: true });\n    this.updateOnlineStatus();\n    getEvents().then((events) => {\n      this.setState({ online: navigator.onLine });\n      const locationEvents =\n        location === 'all'\n          ? events\n          : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents,\n      });\n      this.setState({ isLoading: false });\n    });\n  };\n\n  updateEventCount = (count) => {\n    this.setState({\n      eventCount: count,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ErrorAlert\n          text={\n            this.state.online\n              ? ''\n              : 'MeetApp is offline. Events may not be up to date.'\n          }\n        />\n        <Banner />\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <NumberOfEvents updateEventCount={this.updateEventCount} />\n        <div className=\"loading-spinner\">\n          <BeatLoader\n            loading={this.state.isLoading}\n            color=\"#cc1f00\"\n            size={40}\n          />\n        </div>\n        <EventList events={this.state.events} count={this.state.eventCount} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport * as atatus from 'atatus-spa';\natatus.config('308af35634c648faa2f3aa7e26e79217').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//test atatus\natatus.notify(new Error('Test Atatus Setup'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}